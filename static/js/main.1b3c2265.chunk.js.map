{"version":3,"sources":["components/TodayDate.js","components/loadingUtils.js","components/TotalCases.js","components/HistoryCases.js","components/CustomBtn.js","components/pages/Home.js","components/layout/Navbar.js","components/pages/Graph.js","App.js","index.js"],"names":["DayTitleContainer","styled","div","DayTitle","h2","TodayDate","darkModeFunc","darkMode","today","Date","monthString","dateTh","getMonth","getDate","id","getFullYear","onClick","className","LoadingParas","props","style","loading","background","color","children","LoadingHeaders","width","height","marginBottom","Card","TotalCases","data","flag","history","fatalityRate","deaths","cases","toFixed","recoveryRate","recovered","country","src","alt","todayCases","historyLength","todayCase","Object","values","yesterdayCase","getPreviousCase","length","active","critical","HistoryStyle","HistoryCases","title","autoHide","map","h","index","key","dateData","toUTCString","substr","singleHistory","prevHistoryArray","getDiff","reverse","CustomBtnStyle","Link","CustomBtn","BtnContainer","Home","historyDeaths","showDeathsTimeline","setDeathTimeline","to","Navbar","icon","NavContainer","Nav","href","rel","target","defaultProps","nav","GraphDiv","Graph","dataGraph","useState","totalConfirmedHistory","setTotalConfirmedHistory","totalNewCasesHistory","setTotalNewCasesHistory","totalDeathsHistory","setTotalDeathsHistory","totalNewDeathsHistory","setTotalNewDeathsHistory","confirmedConfig","setConfirmedConfig","diffConfirmedConfig","setDiffConfiremedConfig","configDeaths","setConfigDeaths","diffConfigDeaths","setDiffConfigDeaths","useEffect","getTotalHistoryCases","timeline","deathTimeLine","confirmed","confirmedDiff","deathsDiff","type","series","App","setData","setFlag","isLoading","setTimeline","timelineDeaths","setTimelineDeaths","setShowDeathsTimeline","countryName","JSON","parse","localStorage","getItem","setDarkMode","setCases","setDarkModeStore","setItem","stringify","a","Promise","all","axios","get","resAPI1","resAPI2","flagSrc","countryInfo","timelineAPI","locations","timelines","timelineDeathsAPI","entries","console","log","toast","error","isSelected","setDarkModeFunc","basename","autoClose","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b3c2265.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodayDate = ({ darkModeFunc, darkMode }) => {\r\n  const today = new Date();\r\n  const month = today.getMonth();\r\n  let monthString = '';\r\n  let dateTh = '';\r\n\r\n  switch (month) {\r\n    case 0:\r\n      monthString = 'Jan';\r\n      break;\r\n    case 1:\r\n      monthString = 'Feb';\r\n      break;\r\n    case 2:\r\n      monthString = 'Mar';\r\n      break;\r\n    case 3:\r\n      monthString = 'Apr';\r\n      break;\r\n    case 4:\r\n      monthString = 'May';\r\n      break;\r\n    case 5:\r\n      monthString = 'Jun';\r\n      break;\r\n    case 6:\r\n      monthString = 'Jul';\r\n      break;\r\n    case 7:\r\n      monthString = 'Aug';\r\n      break;\r\n    case 8:\r\n      monthString = 'Sep';\r\n      break;\r\n    case 9:\r\n      monthString = 'Oct';\r\n      break;\r\n    case 10:\r\n      monthString = 'Nov';\r\n      break;\r\n    default:\r\n      monthString = 'Dec';\r\n  }\r\n\r\n  if (today.getDate() === 1) dateTh = 'st';\r\n  else if (today.getDate() === 2) dateTh = 'nd';\r\n  else if (today.getDate() === 3) dateTh = 'rd';\r\n  else dateTh = 'th';\r\n\r\n  return (\r\n    <DayTitleContainer id='today-date'>\r\n      <DayTitle>{`${today.getDate()}${dateTh} ${monthString} ${today.getFullYear()}`}</DayTitle>\r\n      <span onClick={() => darkModeFunc(darkMode)}>\r\n        {darkMode ? <i className='fas fa-moon' /> : <i className='fas fa-sun' />}\r\n      </span>\r\n    </DayTitleContainer>\r\n  );\r\n};\r\n\r\nconst DayTitleContainer = styled.div`\r\n  text-align: center;\r\n  padding: 0.7rem 0rem;\r\n  border-radius: 10px;\r\n  margin: auto;\r\n  background: white;\r\n  box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n  position: relative;\r\n  span {\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 0;\r\n    margin-top: 3px;\r\n    margin-right: 0.7rem;\r\n    text-align: right;\r\n    font-size: 1.4rem;\r\n    transition: 1.5s;\r\n\r\n    i:hover {\r\n      transform: scale(1.2);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DayTitle = styled.h2`\r\n  color: black;\r\n  display: inline-block;\r\n`;\r\n\r\nexport default TodayDate;\r\n","import React from 'react';\r\nexport const LoadingParas = (props) => {\r\n  return (\r\n    <p\r\n      className={props.className}\r\n      style={props.loading ? { background: '#eeeef3', color: '#eeeef3' } : {}}\r\n    >\r\n      {props.children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport const LoadingHeaders = (props) => {\r\n  return (\r\n    <h2\r\n      style={\r\n        props.loading\r\n          ? {\r\n              background: '#eeeef3',\r\n              color: '#eeeef3',\r\n              width: '10rem',\r\n              height: '5rem',\r\n              marginBottom: '10px',\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {props.children}\r\n    </h2>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LoadingParas, LoadingHeaders } from './loadingUtils';\r\n\r\nconst TotalCases = ({ data, flag, history, loading }) => {\r\n  const getPreviousCase = (historyLength) => {\r\n    if (!loading) {\r\n      const todayCase = Object.values(history[historyLength - 1]);\r\n      const yesterdayCase = Object.values(history[historyLength - 2]);\r\n      const total = todayCase[1] - yesterdayCase[1];\r\n      return total;\r\n    }\r\n  };\r\n  const fatalityRate = ((data.deaths / data.cases) * 100).toFixed(2);\r\n  const recoveryRate = ((data.recovered / data.cases) * 100).toFixed(2);\r\n\r\n  return (\r\n    <Card>\r\n      <h2 id='country-name'>\r\n        {!loading && data.country}\r\n        {!loading && (\r\n          <span>\r\n            <img src={flag} alt={data.country} className='img-flag' />\r\n          </span>\r\n        )}\r\n      </h2>\r\n\r\n      <div id='card-container'>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.cases}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Confirmed Cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>\r\n            {data.todayCases === 0 ? getPreviousCase(history.length) : data.todayCases}\r\n          </LoadingHeaders>\r\n          <LoadingParas loading={loading}>New Cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.active}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Active cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.recovered}</LoadingHeaders>\r\n          <LoadingParas loading={loading} className='text-green'>\r\n            Recovered\r\n          </LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.critical}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Critical</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.deaths}</LoadingHeaders>\r\n          <LoadingParas loading={loading} className='text-red'>\r\n            Total Deaths\r\n          </LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{fatalityRate}%</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Fatality Rate</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{recoveryRate}%</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Recovery Rate</LoadingParas>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Card = styled.div`\r\n  #country-name {\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n    margin: 0.5rem 0;\r\n    span img {\r\n      width: 2.2rem;\r\n      margin: auto 0.4rem;\r\n    }\r\n  }\r\n  #card-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 10px;\r\n    .card {\r\n      background: white;\r\n      display: flex;\r\n      height: 10rem;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      text-align: center;\r\n      border-radius: 6px;\r\n      box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n      h2 {\r\n        color: black;\r\n        font-size: 2.2rem;\r\n        margin: 0rem 0;\r\n      }\r\n      p {\r\n        font-size: 1.2rem;\r\n        color: #333;\r\n      }\r\n      .text-green {\r\n        color: #639a67;\r\n      }\r\n      .text-red {\r\n        color: #f73859;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 680px) {\r\n    #card-container {\r\n      grid-template-columns: repeat(3, 1fr);\r\n    }\r\n  }\r\n  @media (max-width: 588px) {\r\n    #card-container {\r\n      grid-template-columns: repeat(2, 1fr);\r\n\r\n      .card {\r\n        height: 8rem;\r\n        h2 {\r\n          font-size: 2rem;\r\n          margin: 0rem 0;\r\n        }\r\n        p {\r\n          font-size: 1rem;\r\n          color: #333;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    #country-name {\r\n      font-size: 1.1rem;\r\n    }\r\n    #card-container {\r\n      .card {\r\n        height: 5rem;\r\n        h2 {\r\n          font-size: 1.3rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TotalCases;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nconst HistoryCases = ({ history, loading, title }) => {\r\n  const getDate = (dateData) => {\r\n    const date = new Date(dateData);\r\n    return date.toUTCString();\r\n  };\r\n\r\n  const getDiff = (singleHistory, prevHistoryArray, index) => {\r\n    if (index === 0) {\r\n      return '';\r\n    } else {\r\n      if (singleHistory[1] - prevHistoryArray[1] === 0) {\r\n        return '';\r\n      } else return `+${singleHistory[1] - prevHistoryArray[1]}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HistoryStyle id='timeline'>\r\n      <h2>{title}</h2>\r\n\r\n      <div>\r\n        <Scrollbars style={{ height: 300 }} autoHide>\r\n          {history\r\n            .map((h, index) => (\r\n              <li key={h[0]}>\r\n                {getDate(h[0]).substr(5, 12)} : <strong>{h[1]}</strong>\r\n                <span>{getDiff(h, history[index - 1], index)}</span>\r\n              </li>\r\n            ))\r\n            .reverse()}\r\n        </Scrollbars>\r\n      </div>\r\n    </HistoryStyle>\r\n  );\r\n};\r\n\r\nconst HistoryStyle = styled.div`\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.2rem;\r\n\r\n  h2 {\r\n    background: #1e2022;\r\n    color: #fff;\r\n    flex: 15%;\r\n    align-content: center;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n  }\r\n\r\n  div {\r\n    padding: 10px 0;\r\n    background: white;\r\n    max-height: 20rem;\r\n    text-align: center;\r\n    li {\r\n      font-size: 1.2rem;\r\n      list-style-type: none;\r\n\r\n      span {\r\n        color: #f73859;\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    margin-bottom: 1.2rem;\r\n    h2 {\r\n      font-size: 1rem;\r\n    }\r\n    div li {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default HistoryCases;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CustomBtn = (props) => {\r\n  return <CustomBtnStyle {...props}>{props.children}</CustomBtnStyle>;\r\n};\r\nconst CustomBtnStyle = styled(Link)`\r\n  text-align: center;\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  color: black;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  border-radius: 10px;\r\n  padding: 0.4rem 2rem;\r\n  background: #f4e04d;\r\n  box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n  @media (max-width: 480px) {\r\n    font-size: 0.8rem;\r\n    padding: 0.3rem 1.8rem;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nexport default CustomBtn;\r\n","import React from 'react';\r\nimport TodayDate from './../TodayDate';\r\nimport TotalCases from './../TotalCases';\r\nimport HistoryCases from '../HistoryCases';\r\nimport CustomBtn from './../CustomBtn';\r\nimport styled from 'styled-components';\r\n\r\nconst Home = ({\r\n  data,\r\n  flag,\r\n  history,\r\n  loading,\r\n  historyDeaths,\r\n  showDeathsTimeline,\r\n  setDeathTimeline,\r\n  darkMode,\r\n  darkModeFunc,\r\n}) => {\r\n  return (\r\n    <div id='total-cases'>\r\n      <TodayDate darkMode={darkMode} darkModeFunc={darkModeFunc} />\r\n      <TotalCases data={data} flag={flag} history={history} loading={loading} />\r\n      <BtnContainer id='btn-container'>\r\n        <CustomBtn onClick={() => setDeathTimeline(showDeathsTimeline)}>\r\n          {!showDeathsTimeline ? 'Deaths' : 'Confirmed'} <i className='fas fa-sync-alt' />\r\n        </CustomBtn>\r\n        <CustomBtn to='/graph'>\r\n          Graphs <i className='fas fa-arrow-right' />\r\n        </CustomBtn>\r\n      </BtnContainer>\r\n      {!showDeathsTimeline && (\r\n        <HistoryCases history={history} title='Timeline: Confirmed Cases' loading={loading} />\r\n      )}\r\n      {showDeathsTimeline && (\r\n        <HistoryCases title='Timeline: Deaths' history={historyDeaths} loading={loading} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BtnContainer = styled.div`\r\n  padding: 1rem 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  a:first-child {\r\n    background: black;\r\n    color: white;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <NavContainer id='navbar'>\r\n      <Nav>\r\n        <div className='title-wrapper'>\r\n          <h2>\r\n            <i className={icon} /> {title}\r\n          </h2>\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href='https://github.com/firdausthedev/covid19-malaysia-tracker'\r\n              rel='noopener noreferrer'\r\n              target='_blank'\r\n            >\r\n              <li className='fab fa-github' /> Check out codes\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </Nav>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\n//default props if no props are entered\r\nNavbar.defaultProps = {\r\n  title: 'Covid-19 MY Tracker',\r\n  icon: 'fas fa-virus',\r\n};\r\n\r\n//check and give warning to console if wrong props type are entered\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  max-width: 1100px;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.7rem 2rem;\r\n  z-index: 1;\r\n  width: 100%;\r\n  opacity: 0.9;\r\n  margin-bottom: 1.5rem;\r\n\r\n  ul {\r\n    list-style: none;\r\n    display: flex;\r\n  }\r\n\r\n  a {\r\n    color: #eeeeee;\r\n    background-color: #1e2022;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 10px;\r\n    margin: 0 0.25rem;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      background: #fff;\r\n      color: black;\r\n      transition: 1s;\r\n    }\r\n  }\r\n\r\n  .title-wrapper {\r\n    background: white;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 10px;\r\n\r\n    h2 {\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    i {\r\n      transform: scale(1);\r\n      animation: pulse 2s linear infinite;\r\n    }\r\n    @keyframes pulse {\r\n      0% {\r\n        transform: scale(1.3);\r\n      }\r\n\r\n      70% {\r\n        transform: scale(1);\r\n      }\r\n\r\n      100% {\r\n        transform: scale(1.3);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    flex-direction: column;\r\n    .title-wrapper {\r\n      border-radius: 10px;\r\n      margin-bottom: 1rem;\r\n      h2 {\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n    a {\r\n      margin: 2rem 0.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n  background-color: #1e2022;\r\n  color: black;\r\n`;\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport ZingChart from 'zingchart-react';\r\nimport CustomeBtn from './../CustomBtn';\r\n\r\nconst Graph = ({ dataGraph, historyDeaths }) => {\r\n  const [totalConfirmedHistory, setTotalConfirmedHistory] = useState([]);\r\n  const [totalNewCasesHistory, setTotalNewCasesHistory] = useState([]);\r\n  const [totalDeathsHistory, setTotalDeathsHistory] = useState([]);\r\n  const [totalNewDeathsHistory, setTotalNewDeathsHistory] = useState([]);\r\n  const [confirmedConfig, setConfirmedConfig] = useState({});\r\n  const [diffConfirmedConfig, setDiffConfiremedConfig] = useState({});\r\n  const [configDeaths, setConfigDeaths] = useState({});\r\n  const [diffConfigDeaths, setDiffConfigDeaths] = useState({});\r\n\r\n  useEffect(() => {\r\n    getTotalHistoryCases(dataGraph, historyDeaths);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getDiff = (singleHistory, prevHistoryArray, index) => {\r\n    if (index === 0) {\r\n      return 0;\r\n    } else {\r\n      if (singleHistory[1] - prevHistoryArray[1] === 0) {\r\n        return 0;\r\n      } else {\r\n        return singleHistory[1] - prevHistoryArray[1];\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTotalHistoryCases = (timeline, deathTimeLine) => {\r\n    const confirmed = timeline.map((h) => h[1]);\r\n    const confirmedDiff = timeline.map((h, index) => getDiff(h, timeline[index - 1], index));\r\n    const deaths = deathTimeLine.map((h) => h[1]);\r\n    const deathsDiff = deathTimeLine.map((h, index) => getDiff(h, deathTimeLine[index - 1], index));\r\n    setTotalNewCasesHistory(confirmedDiff);\r\n    setTotalConfirmedHistory(confirmed);\r\n    setTotalDeathsHistory(deaths);\r\n    setTotalNewDeathsHistory(deathsDiff);\r\n    setConfirmedConfig({\r\n      type: 'line',\r\n      series: [\r\n        {\r\n          values: confirmed,\r\n        },\r\n      ],\r\n    });\r\n    setDiffConfiremedConfig({\r\n      type: 'bar',\r\n      series: [\r\n        {\r\n          values: confirmedDiff,\r\n        },\r\n      ],\r\n    });\r\n    setConfigDeaths({\r\n      type: 'bar',\r\n      series: [\r\n        {\r\n          values: deaths,\r\n        },\r\n      ],\r\n    });\r\n    setDiffConfigDeaths({\r\n      type: 'bar',\r\n      series: [\r\n        {\r\n          values: deathsDiff,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  return (\r\n    <GraphDiv id='graph'>\r\n      <div id='title'>\r\n        <div>\r\n          <CustomeBtn to='/'>Back</CustomeBtn>\r\n        </div>\r\n        <h2>Total Confirmed Cases by Day</h2>\r\n        <div></div>\r\n      </div>\r\n      {totalConfirmedHistory.length > 0 ? <ZingChart data={confirmedConfig} /> : ''}\r\n      <h2 id='last-h2'>Total New Cases by Day</h2>\r\n      {totalNewCasesHistory.length > 0 ? <ZingChart data={diffConfirmedConfig} /> : ''}\r\n      <h2 id='last-h2'>Total Deaths by Day</h2>\r\n      {totalDeathsHistory.length > 0 ? <ZingChart data={configDeaths} /> : ''}\r\n      <h2 id='last-h2'>Total New Deaths by Day</h2>\r\n      {totalNewDeathsHistory.length > 0 ? <ZingChart data={diffConfigDeaths} /> : ''}\r\n    </GraphDiv>\r\n  );\r\n};\r\n\r\nconst GraphDiv = styled.div`\r\n  margin-bottom: 1.5rem;\r\n  #title {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 0.8rem 0;\r\n\r\n    div {\r\n      display: inline-block;\r\n      margin: auto 0;\r\n    }\r\n    h2 {\r\n      text-align: center;\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  #last-h2 {\r\n    text-align: center;\r\n    padding: 0.8rem 0;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    #title h2 {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    #title div a {\r\n      font-size: 0.8rem;\r\n      padding: 0.3rem 1.8rem;\r\n      border-radius: 8px;\r\n    }\r\n\r\n    #last-h2 {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Graph;\r\n","import React, { useEffect, useState } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { HashRouter, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport './App.scss';\nimport Navbar from './components/layout/Navbar';\nimport Graph from './components/pages/Graph';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [flag, setFlag] = useState('');\n  const [loading, isLoading] = useState(true);\n  const [timeline, setTimeline] = useState([]);\n  const [timelineDeaths, setTimelineDeaths] = useState([]);\n  const [showDeathsTimeline, setShowDeathsTimeline] = useState(false);\n  // eslint-disable-next-line no-unused-vars\n  const [countryName, setCountryName] = useState('MY'); // change country here\n\n  const getDarkModeStore = () => {\n    const isMode = JSON.parse(localStorage.getItem('dark'));\n    return isMode || false;\n  };\n  const [darkMode, setDarkMode] = useState(getDarkModeStore());\n\n  useEffect(() => {\n    setCases();\n    setDarkModeStore();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [darkMode]);\n\n  const setDarkModeStore = () => {\n    localStorage.setItem('dark', JSON.stringify(darkMode));\n  };\n  const setCases = async () => {\n    try {\n      const [resAPI1, resAPI2] = await Promise.all([\n        axios.get('https://corona.lmao.ninja/countries/' + countryName),\n        axios.get(\n          'https://coronavirus-tracker-api.herokuapp.com/v2/locations?country_code=' +\n            countryName +\n            '&timelines=true'\n        ),\n      ]);\n      // API https://corona.lmao.ninja/'\n      const flagSrc = resAPI1.data.countryInfo.flag;\n      setFlag(flagSrc);\n      setData(resAPI1.data);\n\n      // API https://coronavirus-tracker-api.herokuapp.com/v2/locations\n      const timelineAPI = resAPI2.data.locations[0].timelines.confirmed.timeline;\n      const timelineDeathsAPI = resAPI2.data.locations[0].timelines.deaths.timeline;\n      setTimeline(Object.entries(timelineAPI));\n      setTimelineDeaths(Object.entries(timelineDeathsAPI));\n      isLoading(false);\n    } catch (error) {\n      console.log(error);\n      toast.error('Server Error. Please come back later..');\n    }\n  };\n\n  const setDeathTimeline = (isSelected) => {\n    setShowDeathsTimeline(!isSelected);\n  };\n\n  const setDarkModeFunc = (isSelected) => {\n    setDarkMode(!isSelected);\n  };\n\n  return (\n    <HashRouter basename='/'>\n      <div className={darkMode ? 'app dark-mode' : 'app light-mode'}>\n        <Navbar />\n        <div className='container'>\n          <ToastContainer autoClose={false} />\n          <Switch>\n            <Route\n              exact\n              path='/'\n              render={(props) => (\n                <Home\n                  {...props}\n                  data={data}\n                  flag={flag}\n                  loading={loading}\n                  history={timeline}\n                  historyDeaths={timelineDeaths}\n                  showDeathsTimeline={showDeathsTimeline}\n                  setDeathTimeline={setDeathTimeline}\n                  darkModeFunc={setDarkModeFunc}\n                  darkMode={darkMode}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/graph'\n              render={(props) => (\n                <Graph {...props} dataGraph={timeline} historyDeaths={timelineDeaths} />\n              )}\n            />\n            <Route\n              render={(props) => (\n                <Home\n                  {...props}\n                  data={data}\n                  flag={flag}\n                  loading={loading}\n                  history={timeline}\n                  historyDeaths={timelineDeaths}\n                  showDeathsTimeline={showDeathsTimeline}\n                  setDeathTimeline={setDeathTimeline}\n                  darkModeFunc={setDarkModeFunc}\n                  darkMode={darkMode}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}