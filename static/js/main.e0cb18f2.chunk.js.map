{"version":3,"sources":["components/TodayDate.js","components/loadingUtils.js","components/TotalCases.js","components/HistoryCases.js","components/pages/Home.js","components/layout/Nabvar.js","components/pages/Graph.js","App.js","index.js"],"names":["DayTitleContainer","styled","div","DayTitle","h2","TodayDate","today","Date","monthString","dateTh","getMonth","getDate","getFullYear","LoadingHeaders","props","style","loading","background","color","width","height","marginBottom","children","LoadingParas","className","Card","TotalCases","data","flag","fatalityRate","recoveryRate","newCase","country","src","alt","id","cases","todayCases","numOfArray","todayCase","yesterdayCase","todayCaseConverted","Object","values","yesterdayCaseConverted","total","parseInt","getPreviousCase","length","active","recovered","critical","deaths","NewCaseStyle","HistoryCases","history","to","autoHide","map","h","index","key","dateData","toUTCString","substr","singleHistory","prevHustoryArray","getDiff","reverse","Grid","Home","useState","setData","setFlag","setFatalityRate","setRecoveryRate","isLoading","setNewCase","newHistory","useEffect","setCases","a","axios","get","res","flagSrc","countryInfo","fatalityRateData","toFixed","recoveryRateData","resApi2","timeline","location","timelines","confirmed","entries","newCaseHistory","console","log","toast","error","autoClose","Navbar","icon","title","NavContainer","Nav","href","rel","target","defaultProps","nav","GraphDiv","Graph","totalConfirmedHistory","setTotalConfirmedHistory","totalNewCasesHistory","setTotalNewCasesHistory","config","setConfig","diffConfig","setDiffConfig","getTotalHistoryCases","prevHistroyArray","history2","array","arrayDiff","type","series","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0cb18f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodayDate = () => {\r\n  let today = new Date();\r\n  let month = today.getMonth();\r\n  let monthString = '';\r\n  let dateTh = '';\r\n\r\n  switch (month) {\r\n    case 0:\r\n      monthString = 'Jan';\r\n      break;\r\n    case 1:\r\n      monthString = 'Feb';\r\n      break;\r\n    case 2:\r\n      monthString = 'Mar';\r\n      break;\r\n    case 3:\r\n      monthString = 'Apr';\r\n      break;\r\n    case 4:\r\n      monthString = 'May';\r\n      break;\r\n    case 5:\r\n      monthString = 'Jun';\r\n      break;\r\n    case 6:\r\n      monthString = 'Jul';\r\n      break;\r\n    case 7:\r\n      monthString = 'Aug';\r\n      break;\r\n    case 8:\r\n      monthString = 'Sep';\r\n      break;\r\n    case 9:\r\n      monthString = 'Oct';\r\n      break;\r\n    case 10:\r\n      monthString = 'Nov';\r\n      break;\r\n    default:\r\n      monthString = 'Dec';\r\n  }\r\n\r\n  if (today.getDate() === 1) dateTh = 'st';\r\n  else if (today.getDate() === 2) dateTh = 'nd';\r\n  else if (today.getDate() === 3) dateTh = 'rd';\r\n  else dateTh = 'th';\r\n\r\n  return (\r\n    <DayTitleContainer>\r\n      <DayTitle>{`${today.getDate()}${dateTh} ${monthString} ${today.getFullYear()}`}</DayTitle>\r\n    </DayTitleContainer>\r\n  );\r\n};\r\n\r\nconst DayTitleContainer = styled.div`\r\n  text-align: center;\r\n  padding: 0.7rem 0rem;\r\n  border-radius: 10px;\r\n  margin: auto;\r\n  /* background-color: #e5e5e5; */\r\n  background: white;\r\n  /* border: 2px solid #e5e5e5; */\r\n  box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n`;\r\n\r\nconst DayTitle = styled.h2`\r\n  color: black;\r\n  display: inline-block;\r\n`;\r\n\r\nexport default TodayDate;\r\n","import React from 'react';\r\nconst LoadingParas = (props) => {\r\n  return (\r\n    <p\r\n      className={props.className}\r\n      style={props.loading ? { background: '#eeeef3', color: '#eeeef3' } : {}}\r\n    >\r\n      {props.children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport const LoadingHeaders = (props) => {\r\n  return (\r\n    <h2\r\n      style={\r\n        props.loading\r\n          ? {\r\n              background: '#eeeef3',\r\n              color: '#eeeef3',\r\n              width: '10rem',\r\n              height: '5rem',\r\n              marginBottom: '10px',\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {props.children}\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default LoadingParas;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport LoadingParas, { LoadingHeaders } from './loadingUtils';\r\n\r\nconst TotalCases = ({ data, flag, fatalityRate, recoveryRate, newCase, loading }) => {\r\n  const getPreviousCase = (numOfArray) => {\r\n    let todayCase = newCase[numOfArray - 1];\r\n    let yesterdayCase = newCase[numOfArray - 2];\r\n    let todayCaseConverted = todayCase != null ? Object.values(todayCase) : {};\r\n    let yesterdayCaseConverted = yesterdayCase != null ? Object.values(yesterdayCase) : {};\r\n    const total = parseInt(todayCaseConverted[1]) - parseInt(yesterdayCaseConverted[1]);\r\n    return !loading ? total : '';\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <h2>\r\n        {data.country}\r\n        <span>\r\n          <img src={flag} alt={data.country} className='img-flag' />\r\n        </span>\r\n      </h2>\r\n\r\n      <div id='card-container'>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.cases}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Confirmed Cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>\r\n            {data.todayCases === 0 ? getPreviousCase(parseInt(newCase.length)) : data.todayCases}\r\n          </LoadingHeaders>\r\n          <LoadingParas loading={loading}>New Cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.active}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Active cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.recovered}</LoadingHeaders>\r\n          <LoadingParas loading={loading} className='green'>\r\n            Recovered\r\n          </LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.critical}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Critical</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.deaths}</LoadingHeaders>\r\n          <LoadingParas loading={loading} className='red'>\r\n            Total Deaths\r\n          </LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{fatalityRate}%</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Fatality Rate</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{recoveryRate}%</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Recovery Rate</LoadingParas>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Card = styled.div`\r\n  h2 {\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n    margin: 0.5rem 0;\r\n    span {\r\n      margin: 0;\r\n      padding: 0;\r\n      /* background: black; */\r\n    }\r\n  }\r\n\r\n  .alert {\r\n    display: block;\r\n    background: red;\r\n    height: 2rem;\r\n  }\r\n\r\n  .img-flag {\r\n    width: 2.2rem;\r\n    margin: auto 0.4rem;\r\n  }\r\n  #card-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 10px;\r\n    .card {\r\n      background: white;\r\n      display: flex;\r\n      height: 10rem;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      border-radius: 6px;\r\n      box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n      h2 {\r\n        color: black;\r\n        text-align: center;\r\n        font-size: 2.2rem;\r\n        margin: 0rem 0;\r\n      }\r\n      p {\r\n        font-size: 1.2rem;\r\n        text-align: center;\r\n        color: #333;\r\n      }\r\n      .green {\r\n        color: #639a67;\r\n      }\r\n      .red {\r\n        color: #f73859;\r\n      }\r\n    }\r\n    .two-infos {\r\n      display: grid;\r\n      grid-template-columns: repeat(2, 1fr);\r\n      .two-infos-items {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n\r\n        h2 {\r\n          font-size: 2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 680px) {\r\n    #card-container {\r\n      grid-template-columns: repeat(3, 1fr);\r\n    }\r\n  }\r\n  @media (max-width: 588px) {\r\n    #card-container {\r\n      grid-template-columns: repeat(2, 1fr);\r\n      two-infos {\r\n        grid-template-columns: repeat(1, 1fr);\r\n      }\r\n      .card {\r\n        h2 {\r\n          font-size: 2rem;\r\n          margin: 0rem 0;\r\n        }\r\n        p {\r\n          font-size: 1rem;\r\n          text-align: center;\r\n          color: #333;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    h2 {\r\n      font-size: 1.1rem;\r\n    }\r\n    #card-container {\r\n      grid-template-columns: repeat(2, 1fr);\r\n      .card {\r\n        height: 5rem;\r\n        h2 {\r\n          font-size: 1.3rem;\r\n          margin: 0rem 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TotalCases;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HistoryCases = ({ history }) => {\r\n  const getDate = (dateData) => {\r\n    const date = new Date(dateData);\r\n    return date.toUTCString();\r\n  };\r\n\r\n  const getDiff = (singleHistory, prevHustoryArray, index) => {\r\n    if (index === 0) {\r\n      return '';\r\n    } else {\r\n      if (singleHistory[1] - prevHustoryArray[1] === 0) {\r\n        return '';\r\n      } else return `+${singleHistory[1] - prevHustoryArray[1]}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NewCaseStyle>\r\n      <h2>History : Confirmed Cases</h2>\r\n      <div id='graph-btn-container'>\r\n        <Link to='/graph'>Graphs</Link>\r\n      </div>\r\n      <div>\r\n        <Scrollbars style={{ height: 300 }} autoHide>\r\n          {history\r\n            .map((h, index) => (\r\n              <li key={h[0]}>\r\n                {getDate(h[0]).substr(5, 12)} : <strong>{h[1]}</strong>\r\n                <span>{getDiff(h, history[index - 1], index)}</span>\r\n              </li>\r\n            ))\r\n            .reverse()}\r\n        </Scrollbars>\r\n      </div>\r\n    </NewCaseStyle>\r\n  );\r\n};\r\n\r\nconst NewCaseStyle = styled.div`\r\n  margin-top: 1.2rem;\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n  overflow: hidden;\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n  margin-bottom: 1.2rem;\r\n\r\n  h2 {\r\n    background: #1e2022;\r\n    color: #fff;\r\n    flex: 15%;\r\n    align-content: center;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n  }\r\n  #graph-btn-container {\r\n    padding-top: 5px;\r\n\r\n    a {\r\n      text-align: center;\r\n      display: inline-block;\r\n      text-decoration: none;\r\n      color: black;\r\n      font-size: 1.2rem;\r\n      font-weight: bold;\r\n      border-radius: 10px;\r\n      padding: 0.4rem 2rem;\r\n      background: #f4e04d;\r\n      box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n    }\r\n  }\r\n\r\n  div {\r\n    padding-bottom: 10px;\r\n    background: white;\r\n    max-height: 20rem;\r\n    /* background: red; */\r\n    text-align: center;\r\n    li {\r\n      font-size: 1.2rem;\r\n      list-style-type: none;\r\n\r\n      span {\r\n        color: #f73859;\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    margin-bottom: 1.2rem;\r\n    h2 {\r\n      font-size: 1rem;\r\n    }\r\n    div li {\r\n      font-size: 1rem;\r\n    }\r\n    #graph-btn-container a {\r\n      font-size: 0.8rem;\r\n      padding: 0.3rem 1.8rem;\r\n      border-radius: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default HistoryCases;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport TodayDate from './../TodayDate';\r\nimport TotalCases from './../TotalCases';\r\nimport styled from 'styled-components';\r\nimport HistoryCases from '../HistoryCases';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Home = () => {\r\n  const [data, setData] = useState({});\r\n  const [flag, setFlag] = useState('');\r\n  const [fatalityRate, setFatalityRate] = useState(0);\r\n  const [recoveryRate, setRecoveryRate] = useState(0);\r\n  const [loading, isLoading] = useState(true);\r\n  const [newCase, setNewCase] = useState([]); //new case from history\r\n  const [history, newHistory] = useState([]); //confirmed history\r\n\r\n  useEffect(() => {\r\n    setCases();\r\n  }, []);\r\n\r\n  const setCases = async () => {\r\n    try {\r\n      const res = await axios.get('https://corona.lmao.ninja/countries/458');\r\n      const flagSrc = res.data.countryInfo.flag;\r\n      const fatalityRateData = ((res.data.deaths / res.data.cases) * 100).toFixed(2);\r\n      const recoveryRateData = ((res.data.recovered / res.data.cases) * 100).toFixed(2);\r\n      setRecoveryRate(recoveryRateData);\r\n      setFatalityRate(fatalityRateData);\r\n      setFlag(flagSrc);\r\n      setData(res.data);\r\n\r\n      const resApi2 = await axios.get(\r\n        'https://coronavirus-tracker-api.herokuapp.com/v2/locations/153'\r\n      );\r\n      const timeline = resApi2.data.location.timelines.confirmed.timeline;\r\n      newHistory(Object.entries(timeline));\r\n      const newCaseHistory = resApi2.data.location.timelines.confirmed.timeline;\r\n      isLoading(false);\r\n      setNewCase(Object.entries(newCaseHistory));\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error('Server Error. Please come back later..');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <TodayDate />\r\n      <ToastContainer autoClose={false} />\r\n      <Grid>\r\n        <TotalCases\r\n          data={data}\r\n          flag={flag}\r\n          fatalityRate={fatalityRate}\r\n          recoveryRate={recoveryRate}\r\n          newCase={newCase}\r\n          loading={loading}\r\n        />\r\n      </Grid>\r\n      <HistoryCases history={history} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n\r\n  @media (max-width: 588px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    grid-gap: 0rem;\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <NavContainer>\r\n      <Nav>\r\n        <div className='title-wrapper'>\r\n          <h2>\r\n            <i className={icon} /> {title}\r\n          </h2>\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href='https://github.com/firdausthedev/covid19-malaysia-tracker'\r\n              rel='noopener noreferrer'\r\n              target='_blank'\r\n            >\r\n              <li className='fab fa-github' /> Check out codes\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </Nav>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\n//default props if no props are entered\r\nNavbar.defaultProps = {\r\n  title: 'Covid-19 MY Tracker',\r\n  icon: 'fas fa-virus',\r\n};\r\n\r\n//check and give warning to console if wrong props type are entered\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  max-width: 1100px;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.7rem 2rem;\r\n  z-index: 1;\r\n  width: 100%;\r\n  opacity: 0.9;\r\n  margin-bottom: 1.5rem;\r\n\r\n  ul {\r\n    display: flex;\r\n  }\r\n\r\n  a {\r\n    color: #fff;\r\n    background: #1e2022;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 10px;\r\n    margin: 0 0.25rem;\r\n\r\n    &:hover {\r\n      background: #fff;\r\n      color: black;\r\n      transition: 1s;\r\n    }\r\n  }\r\n\r\n  .title-wrapper {\r\n    background: white;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 10px;\r\n\r\n    h2 {\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    i {\r\n      transform: scale(1);\r\n      animation: pulse 2s linear infinite;\r\n    }\r\n    @keyframes pulse {\r\n      0% {\r\n        transform: scale(1.3);\r\n      }\r\n\r\n      70% {\r\n        transform: scale(1);\r\n      }\r\n\r\n      100% {\r\n        transform: scale(1.3);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    flex-direction: column;\r\n    .title-wrapper {\r\n      border-radius: 10px;\r\n      margin-bottom: 1rem;\r\n      h2 {\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n    a {\r\n      margin: 2rem 0.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n  background-color: #1e2022;\r\n  color: black;\r\n`;\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport ZingChart from 'zingchart-react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Graph = () => {\r\n  const [totalConfirmedHistory, setTotalConfirmedHistory] = useState([]);\r\n  const [totalNewCasesHistory, setTotalNewCasesHistory] = useState([]);\r\n  const [config, setConfig] = useState({});\r\n  const [diffConfig, setDiffConfig] = useState({});\r\n\r\n  useEffect(() => {\r\n    getTotalHistoryCases();\r\n  });\r\n\r\n  const getDiff = (singleHistory, prevHistroyArray, index) => {\r\n    if (index === 0) {\r\n      return 0;\r\n    } else {\r\n      if (singleHistory[1] - prevHistroyArray[1] === 0) {\r\n        return 0;\r\n      } else {\r\n        return singleHistory[1] - prevHistroyArray[1];\r\n      }\r\n    }\r\n\r\n    //return b;\r\n  };\r\n\r\n  const getTotalHistoryCases = async () => {\r\n    try {\r\n      const res = await axios.get('https://coronavirus-tracker-api.herokuapp.com/v2/locations/153');\r\n      const history2 = Object.entries(res.data.location.timelines.confirmed.timeline);\r\n      const array = history2.map((h) => h[1]);\r\n      const arrayDiff = history2.map((h, index) => getDiff(h, history2[index - 1], index));\r\n      setTotalNewCasesHistory(arrayDiff);\r\n      setTotalConfirmedHistory(array);\r\n      setConfig({\r\n        type: 'line',\r\n        series: [\r\n          {\r\n            values: array,\r\n          },\r\n        ],\r\n      });\r\n      setDiffConfig({\r\n        type: 'bar',\r\n        series: [\r\n          {\r\n            values: arrayDiff,\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      toast.error('Server Error. Please come back later..');\r\n    }\r\n  };\r\n  return (\r\n    <GraphDiv>\r\n      <ToastContainer autoClose={false} />\r\n      <div id='title'>\r\n        <div>\r\n          <Link to='/'>Back</Link>\r\n        </div>\r\n        <h2>Total Confirmed Cases by Day</h2>\r\n        <div></div>\r\n      </div>\r\n      {totalConfirmedHistory.length > 0 ? <ZingChart data={config} /> : ''}\r\n      <h2 id='last-h2'>Total New Cases by Day</h2>\r\n      {totalNewCasesHistory.length > 0 ? <ZingChart data={diffConfig} /> : ''}\r\n    </GraphDiv>\r\n  );\r\n};\r\n\r\nconst GraphDiv = styled.div`\r\n  margin-bottom: 1.5rem;\r\n  #title {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 0.8rem 0;\r\n\r\n    div {\r\n      display: inline-block;\r\n      margin: auto 0;\r\n      a {\r\n        text-align: center;\r\n        display: inline-block;\r\n        text-decoration: none;\r\n        color: black;\r\n        font-size: 1.2rem;\r\n        font-weight: bold;\r\n        border-radius: 10px;\r\n        padding: 0.4rem 2rem;\r\n        background: #f4e04d;\r\n        box-shadow: 0 5px 10px 0 rgba(228, 217, 205, 0.6);\r\n      }\r\n    }\r\n    h2 {\r\n      text-align: center;\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  #last-h2 {\r\n    text-align: center;\r\n    padding: 0.8rem 0;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    #title h2 {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    #title div a {\r\n      font-size: 0.8rem;\r\n      padding: 0.3rem 1.8rem;\r\n      border-radius: 8px;\r\n    }\r\n\r\n    #last-h2 {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Graph;\r\n","import React from 'react';\nimport { HashRouter, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport './App.css';\nimport Navbar from './components/layout/Nabvar';\nimport Graph from './components/pages/Graph';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div className='App'>\n        <Navbar />\n        <div className='container'>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/graph' component={Graph} />\n            <Route component={Home} />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}