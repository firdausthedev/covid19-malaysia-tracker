{"version":3,"sources":["components/style/animation.js","components/TodayDate.js","components/LoadingUtils.js","components/TotalCases.js","components/HistoryCases.js","components/CustomBtn.js","components/pages/Home.js","components/layout/Navbar.js","components/pages/Graph.js","components/pages/404page.js","App.js","index.js"],"names":["rotateAnimation","keyframes","pulseAnimation","heartBeatAnimation","rollInAnimation","ROLLIN","css","PULSE","HEARTBEAT","DayTitleContainer","styled","div","DayTitle","h2","TodayDate","darkModeFunc","darkMode","today","Date","monthString","dateTh","getMonth","getDate","id","getFullYear","onClick","icon","faMoon","faSun","LoadingParas","props","className","loading","children","LoadingHeaders","LoadingCircle","LoadingCircleStyle","Card","TotalCases","data","flag","countryChange","fatalityRate","deaths","cases","toFixed","recoveryRate","recovered","lastUpdated","updated","mins","getUTCMinutes","slice","time","getUTCDate","getUTCMonth","toString","substring","getUTCHours","country","src","alt","todayCases","active","critical","tests","HistoryStyle","HistoryCases","history","title","style","height","autoHide","map","h","index","key","dateData","toUTCString","substr","singleHistory","prevHistoryArray","getDiff","reverse","CustomBtnStyle","Link","black","CustomBtn","BtnContainer","Home","historyDeaths","showDeathsTimeline","setDeathTimeline","faSyncAlt","to","faArrowRight","Navbar","NavContainer","Nav","faVirus","href","rel","target","faGithub","defaultProps","nav","GraphDiv","Graph","dataGraph","useState","totalConfirmedHistory","setTotalConfirmedHistory","totalNewCasesHistory","setTotalNewCasesHistory","totalDeathsHistory","setTotalDeathsHistory","totalNewDeathsHistory","setTotalNewDeathsHistory","confirmedConfig","setConfirmedConfig","diffConfirmedConfig","setDiffConfiremedConfig","configDeaths","setConfigDeaths","diffConfigDeaths","setDiffConfigDeaths","useEffect","getTotalHistoryCases","timeline","deathTimeLine","confirmed","confirmedDiff","deathsDiff","theme","type","series","values","length","NotFoundStyle","darkmode","Page404","App","setData","setFlag","isLoading","setTimeline","timelineDeaths","setTimelineDeaths","setShowDeathsTimeline","counter","setCounter","countryCodeName","countryName","setCountryName","JSON","parse","localStorage","getItem","setDarkMode","setCases","setDarkModeStore","setItem","stringify","name","a","Promise","all","axios","get","resAPI1","resAPI2","flagSrc","countryInfo","timelineAPI","timelineDeathsAPI","Object","entries","console","log","toast","error","isSelected","setDarkModeFunc","basename","process","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20b78bcd.chunk.js","sourcesContent":["import { keyframes, css } from 'styled-components';\r\n\r\nconst rotateAnimation = keyframes`\r\nfrom {\r\n  transform: rotate(0deg);\r\n}\r\nto {\r\n  transform: rotate(360deg);\r\n}\r\n`;\r\n\r\nconst pulseAnimation = keyframes`\r\n0% {\r\n  transform: scale(1.3);\r\n}\r\n\r\n70% {\r\n  transform: scale(1);\r\n}\r\n\r\n100% {\r\n  transform: scale(1.3);\r\n}\r\n`;\r\n\r\nconst heartBeatAnimation = keyframes`\r\n 0% {\r\n    -webkit-transform: scale(1);\r\n    transform: scale(1);\r\n  }\r\n\r\n  14% {\r\n    -webkit-transform: scale(1.3);\r\n    transform: scale(1.3);\r\n  }\r\n\r\n  28% {\r\n    -webkit-transform: scale(1);\r\n    transform: scale(1);\r\n  }\r\n\r\n  42% {\r\n    -webkit-transform: scale(1.3);\r\n    transform: scale(1.3);\r\n  }\r\n\r\n  70% {\r\n    -webkit-transform: scale(1);\r\n    transform: scale(1);\r\n  }`;\r\n\r\nconst rollInAnimation = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    -webkit-transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\r\n    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    -webkit-transform: none;\r\n    transform: none;\r\n  }`;\r\n\r\nexport const ROLLIN = css`\r\n  animation: ${rollInAnimation} 1.5s;\r\n`;\r\n\r\nexport const ROTATE = css`\r\n  animation: ${rotateAnimation} 2s linear infinite;\r\n`;\r\n\r\nexport const PULSE = css`\r\n  animation: ${pulseAnimation} 2s linear infinite;\r\n`;\r\n\r\nexport const HEARTBEAT = css`\r\n  animation: ${heartBeatAnimation} 1.5s;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\r\nimport { HEARTBEAT, ROLLIN } from './style/animation';\r\n\r\nconst TodayDate = ({ darkModeFunc, darkMode }) => {\r\n  const today = new Date();\r\n  const month = today.getMonth();\r\n  let monthString = '';\r\n  let dateTh = '';\r\n\r\n  switch (month) {\r\n    case 0:\r\n      monthString = 'Jan';\r\n      break;\r\n    case 1:\r\n      monthString = 'Feb';\r\n      break;\r\n    case 2:\r\n      monthString = 'Mar';\r\n      break;\r\n    case 3:\r\n      monthString = 'Apr';\r\n      break;\r\n    case 4:\r\n      monthString = 'May';\r\n      break;\r\n    case 5:\r\n      monthString = 'Jun';\r\n      break;\r\n    case 6:\r\n      monthString = 'Jul';\r\n      break;\r\n    case 7:\r\n      monthString = 'Aug';\r\n      break;\r\n    case 8:\r\n      monthString = 'Sep';\r\n      break;\r\n    case 9:\r\n      monthString = 'Oct';\r\n      break;\r\n    case 10:\r\n      monthString = 'Nov';\r\n      break;\r\n    default:\r\n      monthString = 'Dec';\r\n  }\r\n\r\n  if (today.getDate() === 1) dateTh = 'st';\r\n  else if (today.getDate() === 2) dateTh = 'nd';\r\n  else if (today.getDate() === 3) dateTh = 'rd';\r\n  else dateTh = 'th';\r\n\r\n  return (\r\n    <DayTitleContainer id='today-date'>\r\n      <DayTitle>{`${today.getDate()}${dateTh} ${monthString} ${today.getFullYear()}`}</DayTitle>\r\n      <div id='today-date-theme-icon'>\r\n        <span onClick={() => darkModeFunc(darkMode)}>\r\n          {darkMode ? <FontAwesomeIcon icon={faMoon} /> : <FontAwesomeIcon icon={faSun} />}\r\n        </span>\r\n      </div>\r\n    </DayTitleContainer>\r\n  );\r\n};\r\n\r\nconst DayTitleContainer = styled.div`\r\n  text-align: center;\r\n  padding: 0.7rem 0rem;\r\n  border-radius: 10px;\r\n  margin: auto;\r\n  background: var(--white-color);\r\n  box-shadow: var(--box);\r\n  position: relative;\r\n\r\n  #today-date-theme-icon {\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 0;\r\n    margin-right: 0.7rem;\r\n    text-align: right;\r\n    font-size: 1.4rem;\r\n    transition: 1.5s;\r\n    ${ROLLIN}\r\n    span svg {\r\n      :hover {\r\n        cursor: pointer;\r\n        ${HEARTBEAT}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DayTitle = styled.h2`\r\n  color: var(--primary-color);\r\n  display: inline-block;\r\n  @media (max-width: 420px) {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nexport default TodayDate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const LoadingParas = (props) => {\r\n  return <p className={props.loading ? 'loading-para' : props.className}>{props.children}</p>;\r\n};\r\n\r\nexport const LoadingHeaders = (props) => {\r\n  return <h2 className={props.loading ? 'loading-header' : props.className}>{props.children}</h2>;\r\n};\r\n\r\nexport const LoadingCircle = () => {\r\n  return (\r\n    <LoadingCircleStyle className='lds-ellipsis'>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </LoadingCircleStyle>\r\n  );\r\n};\r\n\r\nconst LoadingCircleStyle = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  margin: auto;\r\n  width: 80px;\r\n  height: 40px;\r\n  div {\r\n    position: absolute;\r\n    top: 15px;\r\n    width: 13px;\r\n    height: 13px;\r\n    border-radius: 50%;\r\n    background: #fff;\r\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n\r\n    &:nth-child(1) {\r\n      left: 8px;\r\n      animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    &:nth-child(2) {\r\n      left: 8px;\r\n      animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    &:nth-child(3) {\r\n      left: 32px;\r\n      animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    &:nth-child(4) {\r\n      left: 56px;\r\n      animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis1 {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis3 {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis2 {\r\n    0% {\r\n      transform: translate(0, 0);\r\n    }\r\n    100% {\r\n      transform: translate(24px, 0);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LoadingParas, LoadingHeaders, LoadingCircle } from './LoadingUtils';\r\n\r\nconst TotalCases = ({ data, flag, loading, countryChange }) => {\r\n  const fatalityRate = ((data.deaths / data.cases) * 100).toFixed(2);\r\n  const recoveryRate = ((data.recovered / data.cases) * 100).toFixed(2);\r\n  const lastUpdated = new Date(data.updated);\r\n  const mins = ('0' + lastUpdated.getUTCMinutes()).slice(-2);\r\n  const time = `${lastUpdated.getUTCDate()}/${lastUpdated.getUTCMonth() + 1}/${lastUpdated.getFullYear().toString().substring(2,)} ${lastUpdated.getUTCHours() < 12 ? `0${lastUpdated.getUTCHours()}` : lastUpdated.getUTCHours()}:${mins} ${lastUpdated.getUTCHours() > 12 ? \"PM\" : \"AM\"}`\r\n  return (\r\n    <Card>\r\n      {loading ? (\r\n        <LoadingCircle />\r\n      ) : (\r\n          <h2 id='country-name'>\r\n            {data.country}\r\n            <span>\r\n              <img src={flag} alt={data.country} className='img-flag' onClick={countryChange} />\r\n            </span>\r\n          </h2>\r\n        )}\r\n\r\n      <div id='card-container'>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.cases}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Confirmed Cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.todayCases}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>New Cases</LoadingParas>\r\n          <p>{!loading && time}</p>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.active}</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Active cases</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.recovered}</LoadingHeaders>\r\n          <LoadingParas loading={loading} className='text-green'>\r\n            Recovered\r\n          </LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>\r\n            {data.critical === 0 ? data.tests : data.critical}\r\n          </LoadingHeaders>\r\n          <LoadingParas loading={loading}>\r\n            {data.critical === 0 ? 'Tests Conducted' : 'Criticals'}\r\n          </LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{data.deaths}</LoadingHeaders>\r\n          <LoadingParas loading={loading} className='text-red'>\r\n            Total Deaths\r\n          </LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{fatalityRate}%</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Fatality Rate</LoadingParas>\r\n        </div>\r\n        <div className='card'>\r\n          <LoadingHeaders loading={loading}>{recoveryRate}%</LoadingHeaders>\r\n          <LoadingParas loading={loading}>Recovery Rate</LoadingParas>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Card = styled.div`\r\n  #country-name {\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n    margin: 0.5rem 0;\r\n    position: relative;\r\n    span {\r\n      img {\r\n        width: 2.2rem;\r\n        margin: auto 0.4rem;\r\n        cursor: pointer;\r\n      }\r\n      i {\r\n        font-size: 1.5rem;\r\n        position: absolute;\r\n        right: 0;\r\n        margin-top: 3px;\r\n        margin-right: 0.9rem;\r\n        text-align: right;\r\n      }\r\n    }\r\n  }\r\n  #card-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 10px;\r\n    .card {\r\n      background: var(--white-color);\r\n      display: flex;\r\n      height: 10rem;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      text-align: center;\r\n      border-radius: 6px;\r\n      box-shadow: var(--box);\r\n      padding: 0 0.4rem;\r\n      h2 {\r\n        color: var(--primary-color);\r\n        font-size: 2.2rem;\r\n        margin: 0rem 0;\r\n      }\r\n      p {\r\n        font-size: 1.2rem;\r\n        color: #606470;\r\n      }\r\n      .text-green {\r\n        color: #639a67;\r\n      }\r\n      .text-red {\r\n        color: #f73859;\r\n      }\r\n      \r\n    }\r\n  }\r\n  @media (max-width: 680px) {\r\n    #card-container {\r\n      grid-template-columns: repeat(3, 1fr);\r\n    }\r\n  }\r\n  @media (max-width: 588px) {\r\n    #card-container {\r\n      grid-template-columns: repeat(2, 1fr);\r\n\r\n      .card {\r\n        height: 8rem;\r\n        h2 {\r\n          font-size: 2rem;\r\n          margin: 0rem 0;\r\n        }\r\n        p {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    #country-name {\r\n      font-size: 1.1rem;\r\n    }\r\n    #card-container {\r\n      .card {\r\n        .loading-header {\r\n          width: 6rem;\r\n          height: 4rem;\r\n        }\r\n\r\n        height: 5rem;\r\n        h2 {\r\n          font-size: 1.3rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TotalCases;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nconst HistoryCases = ({ history, loading, title }) => {\r\n  const getDate = (dateData) => {\r\n    const date = new Date(dateData);\r\n    return date.toUTCString();\r\n  };\r\n\r\n  const getDiff = (singleHistory, prevHistoryArray, index) => {\r\n    if (index === 0) {\r\n      return '';\r\n    } else {\r\n      if (singleHistory[1] - prevHistoryArray[1] === 0) {\r\n        return '';\r\n      } else return `+${singleHistory[1] - prevHistoryArray[1]}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HistoryStyle id='timeline'>\r\n      <h2>{title}</h2>\r\n\r\n      <div>\r\n        {!loading && (\r\n          <Scrollbars style={{ height: 300 }} autoHide>\r\n            {history\r\n              .map((h, index) => (\r\n                <li key={h[0]}>\r\n                  {getDate(h[0]).substr(5, 12)} : <strong>{h[1]}</strong>\r\n                  <span>{getDiff(h, history[index - 1], index)}</span>\r\n                </li>\r\n              ))\r\n              .reverse()}\r\n          </Scrollbars>\r\n        )}\r\n      </div>\r\n    </HistoryStyle>\r\n  );\r\n};\r\n\r\nconst HistoryStyle = styled.div`\r\n  border-radius: 10px;\r\n  box-shadow: var(--box);\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.2rem;\r\n\r\n  h2 {\r\n    background: var(--darkish-color);\r\n    color: var(--white-color);\r\n    flex: 15%;\r\n    align-content: center;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n  }\r\n\r\n  div {\r\n    padding: 10px 0;\r\n    background: var(--white-color);\r\n    max-height: 20rem;\r\n    text-align: center;\r\n    li {\r\n      font-size: 1.2rem;\r\n      list-style-type: none;\r\n\r\n      span {\r\n        color: var(--danger-color);\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    margin-bottom: 1.2rem;\r\n    h2 {\r\n      font-size: 1rem;\r\n    }\r\n    div li {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default HistoryCases;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nconst CustomBtn = (props) => {\r\n  return <CustomBtnStyle {...props}>{props.children}</CustomBtnStyle>;\r\n};\r\nconst CustomBtnStyle = styled(Link)`\r\n  text-align: center;\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  color: var(--primary-color);\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  border-radius: 10px;\r\n  padding: 0.4rem 2rem;\r\n  background: var(--accent-color);\r\n  box-shadow: var(--box);\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 0.8rem;\r\n    padding: 0.3rem 1.8rem;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.black &&\r\n    css`\r\n      background: var(--primary-color);\r\n      color: var(--white-color);\r\n\r\n      svg {\r\n        animation-play-state: paused;\r\n      }\r\n      &:hover {\r\n        svg {\r\n          animation-play-state: running;\r\n        }\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default CustomBtn;\r\n","import React from 'react';\r\nimport TodayDate from './../TodayDate';\r\nimport TotalCases from './../TotalCases';\r\nimport HistoryCases from '../HistoryCases';\r\nimport CustomBtn from './../CustomBtn';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Home = ({\r\n  data,\r\n  flag,\r\n  history,\r\n  loading,\r\n  historyDeaths,\r\n  showDeathsTimeline,\r\n  setDeathTimeline,\r\n  darkMode,\r\n  darkModeFunc,\r\n  countryChange,\r\n}) => {\r\n  return (\r\n    <div id='total-cases'>\r\n      <TodayDate darkMode={darkMode} darkModeFunc={darkModeFunc} />\r\n      <TotalCases data={data} flag={flag} loading={loading} countryChange={countryChange} />\r\n      <BtnContainer id='btn-container'>\r\n        <CustomBtn onClick={() => setDeathTimeline(showDeathsTimeline)} black>\r\n          {!showDeathsTimeline ? 'Deaths' : 'Confirmed'} <FontAwesomeIcon icon={faSyncAlt} />\r\n        </CustomBtn>\r\n        <CustomBtn to='/graph'>\r\n          Graphs <FontAwesomeIcon icon={faArrowRight} />\r\n        </CustomBtn>\r\n      </BtnContainer>\r\n      {!showDeathsTimeline && (\r\n        <HistoryCases history={history} title='Timeline: Confirmed Cases' loading={loading} />\r\n      )}\r\n      {showDeathsTimeline && (\r\n        <HistoryCases title='Timeline: Deaths' history={historyDeaths} loading={loading} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BtnContainer = styled.div`\r\n  padding: 1rem 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVirus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { PULSE } from '../style/animation';\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <NavContainer id='navbar'>\r\n      <Nav>\r\n        <div className='title-wrapper'>\r\n          <h2>\r\n            <FontAwesomeIcon icon={faVirus} /> {title}\r\n          </h2>\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href='https://github.com/firdausthedev/covid19-malaysia-tracker'\r\n              rel='noopener noreferrer'\r\n              target='_blank'\r\n            >\r\n              <FontAwesomeIcon icon={faGithub} /> Check out codes\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </Nav>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\n//default props if no props are entered\r\nNavbar.defaultProps = {\r\n  title: 'Covid-19 MY Tracker',\r\n  icon: 'fas fa-virus',\r\n};\r\n\r\n//check and give warning to console if wrong props type are entered\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  max-width: 1100px;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.7rem 2rem;\r\n  z-index: 1;\r\n  width: 100%;\r\n  opacity: 0.9;\r\n  margin-bottom: 1.5rem;\r\n\r\n  ul {\r\n    list-style: none;\r\n    display: flex;\r\n  }\r\n\r\n  a {\r\n    color: var(--white-color);\r\n    background-color: var(--darkish-color);\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 10px;\r\n    margin: 0 0.25rem;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      background: var(--white-color);\r\n      color: var(--primary-color);\r\n      transition: 1s;\r\n    }\r\n  }\r\n\r\n  .title-wrapper {\r\n    background: var(--white-color);\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 10px;\r\n\r\n    h2 {\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    svg {\r\n      transform: scale(1);\r\n      ${PULSE}\r\n\r\n      &:hover {\r\n        animation-play-state: paused;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    flex-direction: column;\r\n    .title-wrapper {\r\n      border-radius: 10px;\r\n      margin-bottom: 1rem;\r\n      h2 {\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n    a {\r\n      margin: 2rem 0.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n  background-color: var(--darkish-color);\r\n  color: var(--primary-color);\r\n`;\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport 'zingchart/es6';\r\nimport ZingChart from 'zingchart-react';\r\nimport CustomeBtn from './../CustomBtn';\r\n\r\nconst Graph = ({ dataGraph, historyDeaths, darkMode }) => {\r\n  const [totalConfirmedHistory, setTotalConfirmedHistory] = useState([]);\r\n  const [totalNewCasesHistory, setTotalNewCasesHistory] = useState([]);\r\n  const [totalDeathsHistory, setTotalDeathsHistory] = useState([]);\r\n  const [totalNewDeathsHistory, setTotalNewDeathsHistory] = useState([]);\r\n  const [confirmedConfig, setConfirmedConfig] = useState({});\r\n  const [diffConfirmedConfig, setDiffConfiremedConfig] = useState({});\r\n  const [configDeaths, setConfigDeaths] = useState({});\r\n  const [diffConfigDeaths, setDiffConfigDeaths] = useState({});\r\n\r\n  useEffect(() => {\r\n    getTotalHistoryCases(dataGraph, historyDeaths);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getDiff = (singleHistory, prevHistoryArray, index) => {\r\n    if (index === 0) {\r\n      return 0;\r\n    } else {\r\n      if (singleHistory[1] - prevHistoryArray[1] === 0) {\r\n        return 0;\r\n      } else {\r\n        return singleHistory[1] - prevHistoryArray[1];\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTotalHistoryCases = (timeline, deathTimeLine) => {\r\n    const confirmed = timeline.map((h) => h[1]);\r\n    const confirmedDiff = timeline.map((h, index) => getDiff(h, timeline[index - 1], index));\r\n    const deaths = deathTimeLine.map((h) => h[1]);\r\n    const deathsDiff = deathTimeLine.map((h, index) => getDiff(h, deathTimeLine[index - 1], index));\r\n    setTotalNewCasesHistory(confirmedDiff);\r\n    setTotalConfirmedHistory(confirmed);\r\n    setTotalDeathsHistory(deaths);\r\n    setTotalNewDeathsHistory(deathsDiff);\r\n\r\n    setConfirmedConfig({\r\n      theme: darkMode ? 'dark' : 'light',\r\n      type: 'line',\r\n      series: [\r\n        {\r\n          values: confirmed,\r\n        },\r\n      ],\r\n    });\r\n    setDiffConfiremedConfig({\r\n      theme: darkMode ? 'dark' : 'light',\r\n      type: 'bar',\r\n      series: [\r\n        {\r\n          values: confirmedDiff,\r\n        },\r\n      ],\r\n    });\r\n    setConfigDeaths({\r\n      theme: darkMode ? 'dark' : 'light',\r\n      type: 'bar',\r\n      series: [\r\n        {\r\n          values: deaths,\r\n        },\r\n      ],\r\n    });\r\n    setDiffConfigDeaths({\r\n      theme: darkMode ? 'dark' : 'light',\r\n      type: 'bar',\r\n      series: [\r\n        {\r\n          values: deathsDiff,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  return (\r\n    <GraphDiv id='graph'>\r\n      <div id='title'>\r\n        <div>\r\n          <CustomeBtn to='/'>Back</CustomeBtn>\r\n        </div>\r\n        <h2>Total Confirmed Cases by Day</h2>\r\n      </div>\r\n\r\n      {totalConfirmedHistory.length > 0 ? <ZingChart data={confirmedConfig} /> : ''}\r\n      <h2>Total New Cases by Day</h2>\r\n      {totalNewCasesHistory.length > 0 ? <ZingChart data={diffConfirmedConfig} /> : ''}\r\n      <h2>Total Deaths by Day</h2>\r\n      {totalDeathsHistory.length > 0 ? <ZingChart data={configDeaths} /> : ''}\r\n      <h2>Total New Deaths by Day</h2>\r\n      {totalNewDeathsHistory.length > 0 ? <ZingChart data={diffConfigDeaths} /> : ''}\r\n    </GraphDiv>\r\n  );\r\n};\r\n\r\nconst GraphDiv = styled.div`\r\n  margin-bottom: 1.5rem;\r\n  #title {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 0 0 0.8rem 0;\r\n\r\n    div {\r\n      display: inline-block;\r\n      margin: auto 0;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    text-align: center;\r\n    padding: 0.8rem 0;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    #title h2 {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    #title div a {\r\n      font-size: 0.8rem;\r\n      padding: 0.3rem 1.8rem;\r\n      border-radius: 8px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport CustomBtn from './../CustomBtn';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Page404 = ({ darkMode }) => {\r\n  return (\r\n    <NotFoundStyle id='not-found' darkmode={darkMode}>\r\n      <div>\r\n        <CustomBtn to='/'>Back</CustomBtn>\r\n      </div>\r\n      <h2>Page not found</h2>\r\n    </NotFoundStyle>\r\n  );\r\n};\r\n\r\nconst NotFoundStyle = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  padding: 0 0 0.8rem 0;\r\n\r\n  div {\r\n    display: inline-block;\r\n    margin: auto 0;\r\n  }\r\n  h2 {\r\n    text-align: center;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    h2 {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.darkmode &&\r\n    css`\r\n      color: var(--white-color);\r\n    `}\r\n`;\r\n\r\nexport default Page404;\r\n","import React, { useEffect, useState } from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './components/pages/Home';\r\nimport './App.scss';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Graph from './components/pages/Graph';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Page404 from './components/pages/404page';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({});\r\n  const [flag, setFlag] = useState('');\r\n  const [loading, isLoading] = useState(true);\r\n  const [timeline, setTimeline] = useState([]);\r\n  const [timelineDeaths, setTimelineDeaths] = useState([]);\r\n  const [showDeathsTimeline, setShowDeathsTimeline] = useState(false);\r\n  let [counter, setCounter] = useState(0);\r\n  const countryCodeName = ['MY', 'ID', 'SG', 'TH'];\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [countryName, setCountryName] = useState(countryCodeName[counter]); // change country here\r\n\r\n  const getDarkModeStore = () => {\r\n    const isMode = JSON.parse(localStorage.getItem('dark'));\r\n    return isMode || false;\r\n  };\r\n  const [darkMode, setDarkMode] = useState(getDarkModeStore());\r\n\r\n  useEffect(() => {\r\n    setCases(countryName);\r\n    setDarkModeStore();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [darkMode]);\r\n\r\n  const setDarkModeStore = () => {\r\n    localStorage.setItem('dark', JSON.stringify(darkMode));\r\n  };\r\n\r\n  const countryChange = () => {\r\n    isLoading(true);\r\n    if (counter < 3) {\r\n      setCounter((counter += 1));\r\n      setCountryName(countryCodeName[counter]);\r\n      setCases(countryCodeName[counter]);\r\n    } else {\r\n      setCounter(0);\r\n      setCountryName(countryCodeName[0]);\r\n      setCases(countryCodeName[0]);\r\n    }\r\n  };\r\n  const setCases = async (name) => {\r\n    try {\r\n      const [resAPI1, resAPI2] = await Promise.all([\r\n        axios.get('https://disease.sh/v3/covid-19/countries/' + name + '?yesterday=true&strict=true&allowNull=true'),\r\n        axios.get(\r\n          'https://disease.sh/v3/covid-19/historical/' +\r\n          name +\r\n          '?lastdays=all'\r\n        ),\r\n      ]);\r\n\r\n      const flagSrc = resAPI1.data.countryInfo.flag;\r\n      setData(resAPI1.data)\r\n      setFlag(flagSrc);\r\n\r\n\r\n      const timelineAPI = resAPI2.data.timeline.cases;\r\n      const timelineDeathsAPI = resAPI2.data.timeline.deaths;\r\n      setTimeline(Object.entries(timelineAPI));\r\n      setTimelineDeaths(Object.entries(timelineDeathsAPI));\r\n      isLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error('Server Error. Please come back later..');\r\n    }\r\n  };\r\n\r\n  const setDeathTimeline = (isSelected) => {\r\n    setShowDeathsTimeline(!isSelected);\r\n  };\r\n\r\n  const setDarkModeFunc = (isSelected) => {\r\n    setDarkMode(!isSelected);\r\n  };\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className={darkMode ? 'dark-mode' : 'light-mode'}>\r\n        <Navbar />\r\n        <div className='container'>\r\n          <ToastContainer />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/'\r\n              render={(props) => (\r\n                <Home\r\n                  {...props}\r\n                  data={data}\r\n                  flag={flag}\r\n                  loading={loading}\r\n                  history={timeline}\r\n                  historyDeaths={timelineDeaths}\r\n                  showDeathsTimeline={showDeathsTimeline}\r\n                  setDeathTimeline={setDeathTimeline}\r\n                  darkModeFunc={setDarkModeFunc}\r\n                  darkMode={darkMode}\r\n                  countryChange={countryChange}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/graph'\r\n              render={(props) => (\r\n                <Graph\r\n                  {...props}\r\n                  dataGraph={timeline}\r\n                  historyDeaths={timelineDeaths}\r\n                  darkMode={darkMode}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path='*' render={(props) => <Page404 {...props} darkMode={darkMode} />} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}